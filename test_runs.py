from Utilities.Plasmid_Utilities import Plasmid_Utilities

asdf = Plasmid_Utilities()

# asdf.primer_match('TATGCCTAGGGCGTTCGGCTGCGGCGAGCGGTATCAGCTCACTCAAAGGCGGTAATACGGTTATCCACAGAATCAGGGGATAACGCAGGAAAGAACATGTGAGCAAAAGGCCAGCAAAAGGCCAGGAACCGTAAAAAGGCCGCGTTGCTGGCGTTTTTCCATAGGCTCCGCCCCCCTGACGAGCATCACAAAAATCGACGCTCAAGTCAGAGGTGGCGAAACCCGACAGGACTATAAAGATACCAGGCGTTTCCCCCTGGAAGCTCCCTCGTGCGCTCTCCTGTTCCGACCCTGCCGCTTACCGGATACCTGTCCGCCTTTCTCCCTTCGGGAAGCGTGGCGCTTTCTCAATGCTCACGCTGTAGGTATCTCAGTTCGGTGTAGGTCGTTCGCTCCAAGCTGGGCTGTGTGCACGAACCCCCCGTTCAGCCCGACCGCTGCGCCTTATCCGGTAACTATCGTCTTGAGTCCAACCCGGTAAGACACGACTTATCGCCACTGGCAGCAGCCACTGGTAACAGGATTAGCAGAGCGAGGTATGTAGGCGGTGCTACAGAGTTCTTGAAGTGGTGGCCTAACTACGGCTACACTAGAAGGACAGTATTTGGTATCTGCGCTCTGCTGAAGCCAGTTACCTTCGGAAAAAGAGTTGGTAGCTCTTGATCCGGCAAACAAACCACCGCTGGTAGCGGTGGTTTTTTTGTTTGCAAGCAGCAGATTACGCGCAGAAAAAAAGGATCTCAAGAAGATCCTTTGATCTTTTCTACGGGGTCTGACGCTCAGTGGAACGAAAACTCACGTTAAGGGATTTTGGTCATGACTAGTGCTTGGATTCTCACCAATAAAAAACGCCCGGCGGCAACCGAGCGTTCTGAACAAATCCAGATGGAGTTCTGAGGTCATTACTGGATCTATCAACAGGAGTCCAAGCGAGCTCGATATCAAATTACGCCCCGCCCTGCCACTCATCGCAGTACTGTTGTAATTCATTAAGCATTCTGCCGACATGGAAGCCATCACAGACGGCATGATGAACCTGAATCGCCAGCGGCATCAGCACCTTGTCGCCTTGCGTATAATATTTGCCCATGGTGAAAACGGGGGCGAAGAAGTTGTCCATATTGGCCACGTTTAAATCAAAACTGGTGAAACTCACCCAGGGATTGGCTGAGACGAAAAACATATTCTCAATAAACCCTTTAGGGAAATAGGCCAGGTTTTCACCGTAACACGCCACATCTTGCGAATATATGTGTAGAAACTGCCGGAAATCGTCGTGGTATTCACTCCAGAGCGATGAAAACGTTTCAGTTTGCTCATGGAAAACGGTGTAACAAGGGTGAACACTATCCCATATCACCAGCTCACCGTCTTTCATTGCCATACGAAATTCCGGATGAGCATTCATCAGGCGGGCAAGAATGTGAATAAAGGCCGGATAAAACTTGTGCTTATTTTTCTTTACGGTCTTTAAAAAGGCCGTAATATCCAGCTGAACGGTCTGGTTATAGGTACATTGAGCAACTGACTGAAATGCCTCAAAATGTTCTTTACGATGCCATTGGGATATATCAACGGTGGTATATCCAGTGATTTTTTTCTCCATTTTAGCTTCCTTAGCTCCCTGCCCATCTCGATAACTCAAAAAATACGCCCTGTAGTGATCTTATTTCATTATGGTGAAAGTTGGAACCTCTTACGTGCCGATCAACAACGAGCAGGTCTCATTCTGAGGCCGAGCGCGTCCGAGTCTTCCACAAACAGGCCTTCGAGTACATCTCCATTGCCCTGCGCATCGATGAGGATGAGAAAGCAGGACAGAAGGAGCAAGCTGTGGAATGGTATAAGAAAGGTATTGAAGAACTGGAAAAAGGAATAGCTGTTATAGTTACAGGACAAGGTGAACAGTGTGAAAGAGCTAGACGCCTTCAAGCTAAAATGATGACTAATTTGGTTATGGCCAAGGACCGCTTACAACTTCTAGAAtaaATCCtGAGACC')

class user_input(object):
    def __init__(self, creator, input_sequences, assembly_type, UID, location, part_number = None, part_description = None):
        self.creator = creator
        self.input_sequences = input_sequences
        self.assembly_type = assembly_type
        self.UID = UID
        self.location = location
        self.part_number = part_number
        self.part_description = part_description

# GG_input = user_input('JL',
#                       ['pAAG28',
#                        'ASDF',
#                        'pAAG54',
#                        'pAAG70',
#                        'pAAG22',
#                        'pAAG31',
#                        'pAAG24',
#                        'pAAG26'
#                        ],
#                       'Cassette',
#                       'pJL0000',
#                       'BUFU'
#                       )

GG_input = user_input('JL',
                      ['gcatCGTCTCaAGCAGGTCTCaTATGTGGAACAGTGGATTCGAAAGCTATGGCAGCTCCTCATACGGGGGAGCCGGCGGCTACACGCAGTCCCCAGGGGGCTTTGGATCGCCCGCACCTTCTCAAGCCGAAAAGAAATCAAGAGCCCGAGCCCAGCACATTGTGCCCTGTACTATATCTCAGCTGCTTTCTGCCACTTTGGTTGATGAAGTGTTCAGAATTGGGAATGTTGAGATTTCACAGGTCACTATTGTGGGGATCATCAGACATGCAGAGAAGGCTCCAACCAACATTGTTTACAAAATAGATGACATGACAGCTGCACCGATGGACGTTCGCCAGTGGGTTGACACAGATGACACCAGCAGTGAAAACACTGTGGTTCCTCCAGAAACCTATGTGAAAGTGGCAGGCCACCTGAGATCTTTTCAGAACAAAAAGAGCCTGGTAGCCTTTAAGATCATGCCCCTGGAGGATATGAATGAGTTCACCACACATATTCTGGAAGTGATCAATGCACACATGGTACTAAGCAAAGCCAACAGCCAGCCCTCAGCAGGGAGAGCACCTATCAGCAATCCAGGAATGAGTGAAGCAGGGAACTTTGGTGGGAATAGCTTCATGCCAGCAAATGGCCTCACTGTGGCCCAAAACCAGGTGTTGAATTTGATTAAGGCTTGTCCAAGACCTGAAGGGTTGAACTTTCAGGATCTCAAGAACCAGCTGAAACACATGTCTGTATCCTCAATCAAGCAAGCTGTGGATTTTCTGAGCAATGAGGGGCACATCTATTCTACTGTGGATGATGACCATTTTAAATCCACAGATGCAGAAGGTAGCGGCAGCGGCAGTTCTtGAGACCtGAGACGgcat'
                       ],
                      'Part',
                      'pJL1234',
                      'asdf',
                      '3a, 4, 5',
                      'Test plasmid assembly for 1F12 chain 1 from the WT Gen9 constructs'
                      )

table_info = asdf.golden_gate_assembly(GG_input) # Part plasmids for assembly of N-nano MBP cassette from 2016713
# asdf.plasmid_checks(table_info, GG_input)
# asdf.generate_ape_file(GG_input, table_info)
# asdf.add_cassette_plasmid_to_db(GG_input, table_info)
asdf.add_part_plasmid_to_db(GG_input, table_info)
